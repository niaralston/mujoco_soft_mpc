<!-- Copyright 2024 DeepMind Technologies Limited

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->

<!-- 
This MuJoCo model demonstrates two deformable spheres using trilinear flex components.
Each sphere has different material properties to showcase various deformation behaviors.

Key concepts:
- Uses trilinear interpolation for more accurate volume preservation during deformation
- Demonstrates how different elasticity parameters affect object behavior
- Shows how to create multiple flexible components with different properties
-->

<mujoco model="Trilinear flex spheres">
  <!-- Include standard scene settings from an external file -->
  <include file="scene.xml"/>

  <!-- Simulation parameters:
       - Using Conjugate Gradient (CG) solver for accurate physics
       - High precision tolerance for stable deformations
       - Small timestep for numerical stability
       - Fast implicit integration for better performance
  -->
  <option solver="CG" tolerance="1e-6" timestep="1e-3" integrator="implicitfast"/>

  <!-- Allocate 10MB of memory for the simulation -->
  <size memory="10M"/>

  <visual>
    <!-- Control force vector visualization intensity -->
    <map stiffness="100"/>
    <!-- Visualization settings for the trilinear bounding box:
         - Makes the regular collision bounding volume hierarchy invisible
         - Enable "Flex Tree" (mjVIS_FLEXBVH) to see the trilinear structure
         
         bv: Controls visibility of collision detection bounding volumes (wireframe boxes)
         bvactive: Controls visibility of currently active collision detection volumes
         Format is "R G B A" where 0 0 0 0 means completely invisible
    -->
    <rgba bv="0 0 0 0" bvactive="0 0 0 0"/>
  </visual>

  <worldbody>
    <!-- Create two static box obstacles in the environment:
         1. A raised platform/wall on the right side
         2. An inclined platform at the center
    -->
    <geom type="box" pos="1.5 0 0.25" size=".5 2 .25"/>
    <geom type="box" pos="0 0 0.25" size="2 2 .05" euler="0 15 0"/>

    <!-- First sphere: Soft and highly deformable
         - Uses 8x8x8 particle grid
         - Lower Young's modulus (1e3) for softer material
         - High Poisson ratio (0.49) for better volume preservation
         - More damping (0.1) for slower, more controlled movement
    -->
    <flexcomp type="ellipsoid" count="8 8 8" spacing=".07 .07 .07" pos="-.5 -.5 1" dim="3"
              radius=".001" rgba="0 .7 .7 1" mass="5" name="soft" dof="trilinear">
      <elasticity young="1e3" poisson="0.49" damping="0.1"/>
      <!-- Disable self-collision and internal forces since shape is maintained by trilinear interpolation -->
      <contact selfcollide="none" internal="false"/>
    </flexcomp>

    <!-- Second sphere: More rubber-like behavior
         - Same particle grid structure
         - Higher Young's modulus (1e4) for stiffer material
         - Lower Poisson ratio (0.4) for more rubber-like compression
         - Very low damping (3e-3) for more bouncy behavior
         - Custom contact parameters for different collision response
    -->
    <flexcomp type="ellipsoid" count="8 8 8" spacing=".07 .07 .07" pos="-.5 .5 1" dim="3"
              radius=".001" rgba="0 .7 .7 1" mass="5" name="rubber" dof="trilinear">
      <elasticity young="1e4" poisson="0.4" damping="3e-3"/>
      <contact selfcollide="none" internal="false" solref="-5000 -10"/>
    </flexcomp>
  </worldbody>
</mujoco>
